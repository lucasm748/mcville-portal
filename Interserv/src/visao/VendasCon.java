/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VendasCon.java
 *
 * Created on 20/10/2011, 20:10:55
 */
package visao;

import controle.VendaControle;
import dao.Conexao;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import modelo.Venda;
import modelo.Pessoa;
import controle.PControle;
import java.net.URL;
import java.sql.PreparedStatement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.xml.crypto.Data;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Lucas
 */
public class VendasCon extends javax.swing.JDialog {

    private VendaControle vcontrole;
    private Conexao con;
    List<Venda> lista = new ArrayList<Venda>();
    private PControle pcontrole;
    List<Pessoa> listaP = new ArrayList<Pessoa>();

    /** Creates new form VendasCon */
    public VendasCon(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        vcontrole = VendaControle.getInstance();
        pcontrole = PControle.getInstance();
        montaTabelaTudo("tudo");
        montaCombo();
        comboFiltro.setSelectedItem(null);
        campoCliente.setEnabled(false);
        campoData.setEnabled(false);
        campoIDVenda.setEnabled(false);
        btBusca.setEnabled(false);
        btImprime.setEnabled(false);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDados = new javax.swing.JTable();
        btBusca = new javax.swing.JButton();
        btImprime = new javax.swing.JButton();
        btCancela = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        campoIDVenda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        campoCliente = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        campoData = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        comboFiltro = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CONSULTA VENDAS");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registros"));

        tabelaDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaDados);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btBusca.setText("Busca");
        btBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscaActionPerformed(evt);
            }
        });

        btImprime.setText("Imprime");
        btImprime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimeActionPerformed(evt);
            }
        });

        btCancela.setText("Cancela");

        campoIDVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoIDVendaMouseClicked(evt);
            }
        });
        campoIDVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoIDVendaKeyReleased(evt);
            }
        });

        jLabel1.setText("ID da Venda");

        campoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        campoCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoClienteMouseClicked(evt);
            }
        });
        campoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoClienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome do Cliente");

        campoData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoDataMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                campoDataMouseReleased(evt);
            }
        });

        jLabel3.setText("Data da venda");

        comboFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Nome do Cliente", "Data da Venda" }));
        comboFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFiltroItemStateChanged(evt);
            }
        });

        jLabel4.setText("Filtrar por");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(campoIDVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoData, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoIDVenda)
                            .addComponent(campoCliente))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btBusca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btImprime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCancela)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btBusca, btCancela, btImprime});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btBusca)
                        .addComponent(btImprime)
                        .addComponent(btCancela))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscaActionPerformed
    if (campoIDVenda.getText().length() > 0) {
        montaTabelaTudo("idVenda");
    } else if (campoCliente.getSelectedItem() != null) {
        montaTabelaTudo("cliente");
    }
    if (campoData.isEnabled()) {
        montaTabelaTudo("dataVenda");
    }

btImprime.setEnabled(true);
}//GEN-LAST:event_btBuscaActionPerformed

private void campoIDVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoIDVendaKeyReleased
}//GEN-LAST:event_campoIDVendaKeyReleased

private void campoIDVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoIDVendaMouseClicked
}//GEN-LAST:event_campoIDVendaMouseClicked

private void campoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoClienteActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_campoClienteActionPerformed

private void campoClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoClienteMouseClicked
}//GEN-LAST:event_campoClienteMouseClicked

private void campoDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoDataMouseClicked
}//GEN-LAST:event_campoDataMouseClicked

private void campoDataMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoDataMouseReleased
// TODO add your handling code here:
}//GEN-LAST:event_campoDataMouseReleased

private void comboFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFiltroItemStateChanged
    if (comboFiltro.getSelectedIndex() == 0) {
        campoIDVenda.setEnabled(true);
        campoIDVenda.grabFocus();
        campoCliente.setEnabled(false);
        campoCliente.setSelectedItem(null);
        campoData.setEnabled(false);
        campoData.setDate(null);
        btBusca.setEnabled(true);
    } else if (comboFiltro.getSelectedIndex() == 1) {
        campoIDVenda.setEnabled(false);
        campoIDVenda.setText(null);
        campoCliente.setEnabled(true);
        campoCliente.grabFocus();
        campoData.setDate(null);
        campoData.setEnabled(false);
        btBusca.setEnabled(true);
    } else {
        campoIDVenda.setEnabled(false);
        campoIDVenda.setText(null);
        campoCliente.setEnabled(false);
        campoCliente.setSelectedItem(null);
        campoData.setEnabled(true);
        campoData.grabFocus();
        btBusca.setEnabled(true);
    }
    btImprime.setEnabled(false);
}//GEN-LAST:event_comboFiltroItemStateChanged

private void btImprimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimeActionPerformed
    if (campoIDVenda.getText().length() > 0) {
        imprimeVenda("id");
    } else if (campoCliente.getSelectedItem() != null) {
        imprimeVenda("cliente");
    }
    if (campoData.isEnabled()) {
        imprimeVenda("data");
    }



}//GEN-LAST:event_btImprimeActionPerformed
    public void imprimeVenda(String filtro) {
        if (filtro.equals("id")) {

            try {
                Long id = Long.parseLong(campoIDVenda.getText());
                System.out.println("O filtro é  : " + id);
                Map parametros = new HashMap();
                parametros.put("FILTRO_ID", id);
                URL arquivo = getClass().getResource("/relatorios/VendaId.jasper");
                JasperReport relatorio = (JasperReport) JRLoader.loadObject(arquivo);
                JasperPrint impressao = JasperFillManager.fillReport(relatorio, parametros, Conexao.getConnection());
                JasperViewer visualizador = new JasperViewer(impressao, false);
                visualizador.setTitle("RELATÓRIO DE VENDAS");
                visualizador.setAlwaysOnTop(true);
                visualizador.setVisible(true);

                this.dispose();


            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (filtro.equals("cliente")) {


            try {
                Long id = (listaP.get(campoCliente.getSelectedIndex()).getId());
                System.out.println("O filtro é  : " + id);
                Map parametros = new HashMap();
                parametros.put("FILTRO_CLIENTE", id);
                URL arquivo = getClass().getResource("/relatorios/VendaClientes.jasper");
                JasperReport relatorio = (JasperReport) JRLoader.loadObject(arquivo);
                JasperPrint impressao = JasperFillManager.fillReport(relatorio, parametros, Conexao.getConnection());
                JasperViewer visualizador = new JasperViewer(impressao, false);
                visualizador.setTitle("RELATÓRIO DE VENDAS");
                visualizador.setAlwaysOnTop(true);
                visualizador.setVisible(true);

                this.dispose();


            } catch (Exception e) {
                e.printStackTrace();
            }
        }else if (filtro.equals("data")){
            
            try {
               
               String DataFormatop = "yyyy-MM-dd";
               SimpleDateFormat sdf = new SimpleDateFormat(DataFormatop);
               Date dta = sdf.parse(sdf.format(campoData.getDate()));
               System.out.println("O filtro é  Date da = " +dta);
                Map parametros = new HashMap();
                parametros.put("FILTRO_DATA", dta);
                URL arquivo = getClass().getResource("/relatorios/VendaData.jasper");
                JasperReport relatorio = (JasperReport) JRLoader.loadObject(arquivo);
                JasperPrint impressao = JasperFillManager.fillReport(relatorio, parametros, Conexao.getConnection());
                JasperViewer visualizador = new JasperViewer(impressao, false);
                visualizador.setTitle("RELATÓRIO DE VENDAS");
                visualizador.setAlwaysOnTop(true);
                visualizador.setVisible(true);

                this.dispose();


            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
        
    

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendasCon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendasCon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendasCon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendasCon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                final VendasCon dialog = new VendasCon(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        dialog.dispose();
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBusca;
    private javax.swing.JButton btCancela;
    private javax.swing.JButton btImprime;
    private javax.swing.JComboBox campoCliente;
    private com.toedter.calendar.JDateChooser campoData;
    private javax.swing.JTextField campoIDVenda;
    private javax.swing.JComboBox comboFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaDados;
    // End of variables declaration//GEN-END:variables

    private void montaTabelaTudo(String filtro) {
        if (filtro.equals("tudo")) {
            lista = vcontrole.listaTodos();
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID");
            modelo.addColumn("Cliente");
            modelo.addColumn("Data");
            modelo.addColumn("ValorTotal");

            for (Venda v : lista) {
                modelo.addRow(new Object[]{v.getId(), v.getPessoa().getNome(), v.getDataVenda(), v.getValorTotal()});
            }
            tabelaDados.setModel(modelo);
        } else if (filtro.equals("dataVenda")) {
            try {
                Date dataVenda = campoData.getDate();
                lista = vcontrole.ListaData(dataVenda);
            } catch (Exception e) {
                e.printStackTrace();
            }
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID");
            modelo.addColumn("Cliente");
            modelo.addColumn("Data");
            modelo.addColumn("ValorTotal");

            for (Venda v : lista) {
                modelo.addRow(new Object[]{v.getId(), v.getPessoa().getNome(), v.getDataVenda(), v.getValorTotal()});
            }
            tabelaDados.setModel(modelo);
            System.out.println("teste");
        } else if (filtro.equals("idVenda")) {
            lista = vcontrole.listaID(Long.parseLong(campoIDVenda.getText()), 0);

            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID");
            modelo.addColumn("Cliente");
            modelo.addColumn("Data");
            modelo.addColumn("ValorTotal");

            for (Venda v : lista) {
                modelo.addRow(new Object[]{v.getId(), v.getPessoa().getNome(), v.getDataVenda(), v.getValorTotal()});
            }
            tabelaDados.setModel(modelo);
        } else if (filtro.equals("cliente")) {
            Pessoa cli = listaP.get(campoCliente.getSelectedIndex());
            System.out.print(cli);
            lista = vcontrole.listapCli(cli.getId());

            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID");
            modelo.addColumn("Cliente");
            modelo.addColumn("Data");
            modelo.addColumn("ValorTotal");

            for (Venda v : lista) {
                modelo.addRow(new Object[]{v.getId(), v.getPessoa().getNome(), v.getDataVenda(), v.getValorTotal()});
            }
            tabelaDados.setModel(modelo);
        }
    }

    public void montaCombo() {
        campoCliente.removeAllItems();
        listaP = pcontrole.listaTodos();
        for (Pessoa p : listaP) {
            campoCliente.addItem(p.getNome());
        }
    }
}
